class Solution {
public:
    int singleNonDuplicate(vector<int>& nums) {
        if(nums.size()==1)
            return nums[0];
        if(nums[0]!=nums[1])
            return nums[0];
        if(nums[nums.size()-1]!=nums[nums.size()-2])
            return nums[nums.size()-1];
        int low = 0;
        int high = nums.size()-1;
        int mid = low+(high-low)/2;
        while(low<=high)
        {
            if(mid%2==0)
            {
                if(nums[mid]!=nums[mid+1])
                     high = mid-1;
                else low = mid+2;
            }
            else
            {
                if(nums[mid]!=nums[mid+1])
                     low = mid+1;
                else high = mid-2;
            }
            mid = low+(high-low)/2;
        }
        return nums[low];
    }
};
