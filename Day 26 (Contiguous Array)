#include<cmath>
#include<unordered_map>
class Solution {
public:
     int solve(vector<int>&nums)
     {
         unordered_map<int,int> firstOccurence;
         firstOccurence[0] = -1;
         int longest = 0;
         int sum = 0;
         for(int i = 0;i<nums.size();i++)
         {
             nums[i] = nums[i]==0?-1:1;
             sum+=nums[i];
             if(firstOccurence.find(sum)!=firstOccurence.end())
             {
                 longest = max(longest,i - firstOccurence[sum]);
             }
             else
             {
                 firstOccurence[sum] = i;
             }
         }
         return longest;
     }
         
    int findMaxLength(vector<int>& nums) {
        return solve(nums);
    }
};
